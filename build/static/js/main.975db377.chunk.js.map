{"version":3,"sources":["components/Container/Container.js","components/PhoneBook/PhoneBookListItem.jsx","components/PhoneBook/PhoneBookList.jsx","components/PhoneBook/PhoneBookForm.jsx","components/PhoneBook/PhoneBookFilter.jsx","helpers/filterContacts.js","App.js","index.js","components/Container/Container.module.css"],"names":["Container","children","className","s","container","PhoneBookListItem","name","number","id","onDeleteContact","onClick","PhoneBookList","contacts","map","PhoneBookForm","onSetUserInfo","onAddContact","onSubmit","action","htmlFor","onInput","type","value","pattern","title","required","placeholder","PhonebookFilter","onSetFilter","filterValue","filterContacts","filter","obj","toLowerCase","includes","trim","App","state","handleSetUserInfo","e","setState","target","handleAddContact","preventDefault","some","el","alert","contact","shortId","generate","prev","handleDeleteContact","handleChangeFilter","console","log","localStorage","getItem","parsedContacts","JSON","parse","this","prevProps","prevState","nextContacts","setItem","stringify","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.975db377.chunk.js","sourcesContent":["import s from './Container.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","const PhoneBookListItem = ({ name, number, id, onDeleteContact }) => {\r\n  return (\r\n    <li>\r\n      <p>Name:{name}</p>\r\n      <p>Number:{number}</p>\r\n      <button onClick={onDeleteContact} id={id}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default PhoneBookListItem;\r\n","import PhoneBookListItem from './PhoneBookListItem';\r\n\r\nconst PhoneBookList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ name, number, id }) => {\r\n        return (\r\n          <PhoneBookListItem\r\n            onDeleteContact={onDeleteContact}\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            id={id}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PhoneBookList;\r\n","const PhoneBookForm = ({ onSetUserInfo, onAddContact, name, number }) => {\r\n  return (\r\n    <form onSubmit={onAddContact} action=\"\">\r\n      <label htmlFor=\"\">{/* htmlFor помогает читалкам и другим вспомогательным инструментам. */}\r\n        <p>Name</p>\r\n        <input\r\n          onInput={onSetUserInfo}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          placeholder=\"Ivan Ivanov\"\r\n        />\r\n      </label>\r\n      <label htmlFor=\"\">\r\n        <p>Number</p>\r\n        <input\r\n          onInput={onSetUserInfo}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          placeholder=\"111-11-11\"\r\n        />\r\n      </label>\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PhoneBookForm;\r\n","import React from 'react';\r\n\r\nconst PhonebookFilter = ({ onSetFilter, filterValue }) => (\r\n  <>\r\n    <label>\r\n      <p>Filter: </p>\r\n      <input\r\n        name=\"filter\"\r\n        onInput={onSetFilter}\r\n        type=\"text\"\r\n        value={filterValue}\r\n      />\r\n    </label>\r\n  </>\r\n);\r\n\r\nexport default PhonebookFilter;\r\n","function filterContacts(contacts, filter) {\r\n  return contacts.filter(obj => {\r\n    return obj.name.toLowerCase().includes(filter.toLowerCase().trim());\r\n  });\r\n}\r\n\r\nexport default filterContacts;\r\n","import Container from './components/Container/Container';\r\n\r\nimport PhoneBookList from './components/PhoneBook/PhoneBookList';\r\nimport PhoneBookForm from './components/PhoneBook/PhoneBookForm';\r\nimport PhonebookFilter from './components/PhoneBook/PhoneBookFilter';\r\nimport filterContacts from './helpers/filterContacts';\r\nimport { Component } from 'react';\r\nimport shortId from 'shortid';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    name: '',\r\n    number: '',\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log('App componentDidMount');\r\n\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contacts);\r\n\r\n    //записываем поверх в contacts наш parsedContacts\r\n    //если есть parsedContacts, тогда записываем в state\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log('App componentDidUpdate');\r\n\r\n    const nextContacts = this.state.contacts;\r\n    const prevContacts = prevState.contacts;\r\n\r\n    if (nextContacts !== prevContacts) {\r\n      console.log('Обновилось поле contacts, записываю contacts в хранилище');\r\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\r\n    }\r\n  }\r\n\r\n  handleSetUserInfo = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleAddContact = e => {\r\n    e.preventDefault();\r\n    if (this.state.contacts.some(el => el.name === this.state.name)) {\r\n      alert(` ${this.state.name} is already in contacts!`);\r\n      return;\r\n    }\r\n    const contact = {\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n      id: shortId.generate(),\r\n    };\r\n    this.setState(prev => ({\r\n      contacts: [...prev.contacts, contact],\r\n      name: '',\r\n      number: '',\r\n    }));\r\n  };\r\n\r\n  handleDeleteContact = e => {\r\n    this.setState({\r\n      contacts: this.state.contacts.filter(el => el.id !== e.target.id),\r\n    });\r\n  };\r\n\r\n  handleChangeFilter = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const contacts = filterContacts(this.state.contacts, this.state.filter);\r\n    return (\r\n      <Container>\r\n        <h1>Phonebook</h1>\r\n        <PhoneBookForm\r\n          name={this.state.name}\r\n          number={this.state.number}\r\n          onAddContact={this.handleAddContact}\r\n          onSetUserInfo={this.handleSetUserInfo}\r\n        />\r\n        <h2>Contacts</h2>\r\n        <PhonebookFilter\r\n          filterValue={this.state.filter}\r\n          onSetFilter={this.handleChangeFilter}\r\n        />\r\n        <PhoneBookList\r\n          onDeleteContact={this.handleDeleteContact}\r\n          contacts={contacts}\r\n        />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__39z5v\"};"],"sourceRoot":""}